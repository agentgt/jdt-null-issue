<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.adamgent</groupId>
  <artifactId>jdt-null-issue</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>jdt-null-issue</name>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.version>21</java.version>
    <plexus-compiler-eclipse.version>2.13.0</plexus-compiler-eclipse.version>
    <ecj.version>3.36.0</ecj.version>
    <parent.root>${project.basedir}</parent.root>
  </properties>

  <build>
    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.11.0</version>

        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <compilerId>eclipse</compilerId>
          <!-- 
              You need to use compilerArguments here instead of compilerArgs despite it being
          deprecated 
              -->
          <compilerArguments>
            <properties>${parent.root}/etc/eea/prefs/org.eclipse.jdt.core.prefs</properties>
            <!-- Apparently CLASSPATH is the only one that works -->
            <annotationpath>CLASSPATH</annotationpath>
            <!-- Because classpath is the only that works we add our eea
            directory to it -->
            <classpath>${parent.root}/etc/eea</classpath>
          </compilerArguments>
          <showWarnings>true</showWarnings>
          <showDeprecation>true</showDeprecation>
          <failOnWarning>true</failOnWarning>
          <failOnError>true</failOnError>
        </configuration>
        <!-- 
            Maven will try patch in modules which breaks the eclipse compiler
            Fatal error compiling: Failed to run the ecj compiler: Unrecognized option :
        patch-module
            The patch module above has two hyphens in front of it.
            -->
        <executions>
          <execution>
            <id>default-testCompile</id>
            <phase>none</phase>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.codehaus.plexus</groupId>
            <artifactId>plexus-compiler-eclipse</artifactId>
            <version>${plexus-compiler-eclipse.version}</version>
          </dependency>
          <dependency>
            <groupId>org.eclipse.jdt</groupId>
            <artifactId>ecj</artifactId>
            <version>${ecj.version}</version>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
  </build>
  <dependencies>
    <dependency>
      <groupId>org.eclipse.jdt</groupId>
      <artifactId>org.eclipse.jdt.annotation</artifactId>
      <version>2.2.700</version>
    </dependency>
  </dependencies>

</project>